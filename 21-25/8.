

Problem Link : https://leetcode.com/problems/number-of-boomerangs/

class Solution {
public:
    int calDis(vector<int>& p1,vector<int>& p2){
        int x=p1[0]-p2[0],y=p1[1]-p2[1];
        return x*x+y*y;
    }
    int solve(unordered_map<int,int>& mp){
        int ans=0;
        for(auto x:mp){
            int n=x.second;
            if(n<2) continue;
            ans+=n*(n-1);
        }
        return ans;
    }
    int numberOfBoomerangs(vector<vector<int>>& points) {
        int n=points.size(),ans=0;
        unordered_map<int,int> mp;
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(i==j) continue;
                int dis=calDis(points[i],points[j]);
                mp[dis]++;
            }
            ans+=solve(mp);
            mp.clear();
        }
        return ans;
    }
};
