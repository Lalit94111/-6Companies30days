

Problem Link : https://leetcode.com/problems/rotting-oranges/


class Solution {
public:
    int dx[4]={-1,0,1,0};
    int dy[4]={0,1,0,-1};
    int orangesRotting(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        int fresh=0;
        
        queue<pair<int,int>> q;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==2){
                    q.push({i,j});
                    grid[i][j]=0;
                }else if(grid[i][j]==1) fresh++;
            }
        }
        
        int ans=0;
        while(!q.empty()){
            int sz=q.size();
            while(sz--){
                int x=q.front().first;
                int y=q.front().second;
                q.pop();
                
                for(int i=0;i<4;i++){
                    int new_x=x+dx[i],new_y=y+dy[i];
                    if(new_x >=0 && new_x<n && new_y>=0 && new_y<m && grid[new_x][new_y]==1){
                        fresh--;
                        q.push({new_x,new_y});
                        grid[new_x][new_y]=0;
                    }
                }
            }
            if(!q.empty()) ans++;
        }
        return fresh>0?-1:ans;
    }
};
